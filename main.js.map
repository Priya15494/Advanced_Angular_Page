{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/countryview/countryview.component.css","webpack:///./src/app/countryview/countryview.component.html","webpack:///./src/app/countryview/countryview.component.ts","webpack:///./src/app/currencyview/currencyview.component.css","webpack:///./src/app/currencyview/currencyview.component.html","webpack:///./src/app/currencyview/currencyview.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/languageview/languageview.component.css","webpack:///./src/app/languageview/languageview.component.html","webpack:///./src/app/languageview/languageview.component.ts","webpack:///./src/app/view/view.component.css","webpack:///./src/app/view/view.component.html","webpack:///./src/app/view/view.component.ts","webpack:///./src/app/viewdata.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".header{\\r\\n    background-color: #FF0000;\\r\\n    display:block;\\r\\n    padding: 0.5%;\\r\\n    text-align: center;\\r\\n    color: white;\\r\\n    margin-top:1%;\\r\\n    \\r\\n}\\r\\n.myimage img{\\r\\n    margin-top: 12%;\\r\\n    margin-left: 5%;\\r\\n    width: 23vw;\\r\\n    height: 26vh;\\r\\n}\\r\\np{\\r\\n    margin-left:40%;\\r\\n    color: #FF0000;\\r\\n}\\r\\n.container{\\r\\n    width: 100%;\\r\\n}\\r\\n\"","module.exports = \"\\n  <meta name=\\\"viewport\\\" content=\\\"width=device-width, initial-scale=1\\\">\\n<div class=\\\"container\\\">\\n    <div class=\\\"row header\\\">\\n        <div class=\\\"col-12 col-md-12 col-sm-12 col-xs-12\\\">\\n          <h2>OUR WORLD - VIEW</h2>\\n        </div>\\n    </div>\\n    <div class=\\\"col-12 col-md-12 col-sm-12 col-xs-12\\\">\\n            <a [routerLink]=\\\"['/home']\\\">Click here to view all Regions</a>    \\n    </div>\\n  </div>\\n  <br/>\\n  <router-outlet></router-outlet>\\n\\n \\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { ViewComponent } from './view/view.component';\nimport {RouterModule,Routes} from '@angular/router';\nimport { ViewdataService } from './viewdata.service';\nimport { HttpClientModule } from '@angular/common/http';\nimport { HomeComponent } from './home/home.component';\nimport { CountryviewComponent } from './countryview/countryview.component';\nimport { CurrencyviewComponent } from './currencyview/currencyview.component';\nimport { LanguageviewComponent } from './languageview/languageview.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    ViewComponent,\n    CountryviewComponent,\n    CurrencyviewComponent,\n    LanguageviewComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    RouterModule.forRoot([\n      {path:'home',component:HomeComponent},\n      {path:'view',component:ViewComponent},\n      {path:'countryview/:countryname',component:CountryviewComponent},\n      {path:'currencyview/:currencycode',component:CurrencyviewComponent},\n      {path:'languageview/:languagecode',component:LanguageviewComponent}\n    ])\n\n  ],\n  providers: [ViewdataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".container{\\r\\n    width:100%;\\r\\n}\\r\\n.coverHeight {\\r\\n    max-height: 300px;\\r\\n    width: 640px;\\r\\n    overflow: hidden;\\r\\n    background-position: center;\\r\\n    background-repeat: no-repeat; \\r\\n}\\r\\n.profileHeight {\\r\\n    border: 0.5vw solid blue;\\r\\n    border-radius: 5px;\\r\\n    box-shadow: 1px 1px 1px 1px silver;\\r\\n}\\r\\n.myimage img{\\r\\n    margin-top: 3%;\\r\\n    margin-left: 5%;\\r\\n    width: 25vw;\\r\\n    height: 15vh;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n     <div class=\\\"row\\\" *ngIf='countrydetails'>\\n                 <div id=\\\"cover\\\" class=\\\"col-12 col-sm-12 col-md-12 coverHeight\\\">\\n                    <img src=\\\"{{countrydetails[0].flag}}\\\" class=\\\"img-fluid profileHeight\\\"/>\\n                 </div>\\n\\n                 <div class=\\\"col-12 col-sm-12 col-md-12 col-lg-12 col-xl-12\\\">\\n                    <p><strong style=\\\"font-size:150%;color: orangered\\\"><i>{{countrydetails[0].name | uppercase}}-</i></strong>\\n                     A Country of {{countrydetails[0].subregion}} in {{countrydetails[0].region}} region.\\n                     People from this country are called as <strong>{{countrydetails[0].demonym}}'s.</strong>\\n                    </p>\\n                  </div>\\n\\n                 <div class=\\\"col-12 col-md-6 col-lg-6 col-sm-6\\\">\\n                    <p><strong style=\\\"color: darkgreen;text-align:center ;font-size:1.5em;\\\">Basic Information-</strong></p>\\n                    <p><strong style=\\\"color:darkslategray\\\"><i>Capital-</i></strong>{{countrydetails[0].capital}}</p>\\n                    <p><strong style=\\\"color:darkslategray\\\"><i>Population-</i></strong>{{countrydetails[0].population}}</p>\\n                    <p><strong style=\\\"color:darkslategray\\\"><i>Nativename-</i></strong>{{countrydetails[0].nativeName}}</p>\\n                    <p *ngIf=\\\"countrydetails[0].languages.length!=undefined && countrydetails[0].languages.length>0\\\">\\n                        <strong style=\\\"color:darkslategray\\\"><i>Languages:</i></strong> \\n                        <span *ngFor=\\\"let language of countrydetails[0].languages;let first=first;let last=last\\\">\\n                        <a [routerLink]=\\\"['/languageview',language.iso639_1]\\\">{{language.name}}</a>--{{language.nativeName}}(Script){{last ? '' : ','}}</span>\\n                    </p>\\n                    <p *ngIf=\\\"countrydetails[0].altSpellings.length!=undefined && countrydetails[0].altSpellings.length>0\\\">\\n                            <strong style=\\\"color:darkslategray\\\"><i>Alias names:</i></strong> \\n                            <span *ngFor=\\\"let alias of countrydetails[0].altSpellings;let first=first;let last=last\\\">\\n                                {{alias}}{{last ? '' : ','}}</span>\\n                    </p>\\n\\n                 </div>\\n\\n                 <div class=\\\"col-12 col-md-6 col-lg-6 col-sm-6 \\\">\\n                    <p><strong style=\\\"color: darkgreen;text-align: center;font-size:1.5em;\\\">Geographical Information-</strong></p>\\n                    <p *ngIf=\\\"countrydetails[0].latlng.length!=undefined && countrydetails[0].latlng.length>0\\\">\\n                        <strong style=\\\"color:darkslategray\\\"><i>Latitude&Longitude:</i></strong>\\n                        {{countrydetails[0].latlng[0]}} Lat,{{countrydetails[0].latlng[1]}} Long\\n                    </p>\\n                    <p><strong style=\\\"color:darkslategray\\\"><i>Area :</i></strong>{{countrydetails[0].area}} KMS</p>\\n                    <p><strong style=\\\"color:darkslategray\\\"><i>gini :</i></strong>{{countrydetails[0].gini}}</p>\\n                    <p *ngIf=\\\"countrydetails[0].borders.length!=undefined && countrydetails[0].borders.length>0\\\">\\n                        <strong style=\\\"color:darkslategray\\\"><i>Borders of this country -</i> </strong> <span *ngFor=\\\"let border of countrydetails[0].borders;let first=first;let last=last\\\">{{border}}{{last ? '' : ','}}</span>\\n                    </p>\\n                 </div>\\n                   \\n                  <div class=\\\"myimage col-12 col-md-6 col-sm-6 \\\">\\n                        <p style=\\\"color: orangered; font-size: 1.25em\\\"><strong>Time Zones-</strong></p>\\n                        <img src=\\\"assets/clock.jpg\\\">          \\n                  </div>\\n\\n                 <div class=\\\"col-md-6 col-sm-6 col-12\\\">\\n                   <br>\\n                    <p *ngIf=\\\"countrydetails[0].timezones.length!=undefined && countrydetails[0].timezones.length>0\\\">\\n                        <strong style=\\\"color:darkslategray\\\">time ZONE's- </strong> <span *ngFor=\\\"let time of countrydetails[0].timezones;let first=first;let last=last\\\">{{time}}{{last ? '' : ','}}</span>\\n                    </p>\\n                    <p><strong style=\\\"color:darkslategray\\\">Callingcode :</strong>{{countrydetails[0].callingCodes[0]}} </p>\\n                    <p><strong style=\\\"color:darkslategray\\\">NumericCode :</strong>{{countrydetails[0].numericCode}} </p>\\n                </div>\\n                <br>\\n                <div class=\\\"col-12\\\">\\n                    <p><strong style=\\\"color: darkgreen;text-align:center ;font-size:1.25em;\\\">Regional Blocs-</strong></p>\\n                    <p *ngIf=\\\"countrydetails[0].regionalBlocs.length!=undefined && countrydetails[0].regionalBlocs.length>0\\\">\\n                     <span *ngFor=\\\"let bloc of countrydetails[0].regionalBlocs;let first=first;let last=last\\\">\\n                         Acronym- {{bloc.acronym}},&nbsp;Name- {{bloc.name}},&nbsp;\\n                         OtherNames-\\n                         <span *ngFor=\\\"let names of bloc.otherNames;let first=first;let last=last\\\">\\n                             {{names}}{{last ? '' : ','}}</span>\\n                      {{last ? '' : ','}}</span>\\n                    </p>\\n                </div>\\n\\n                <div class=\\\"col-12\\\">\\n                   <p>\\n                    <button class=\\\"btn btn-primary\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#collapseExample\\\" aria-expanded=\\\"false\\\" aria-controls=\\\"collapseExample\\\">\\n                        See Translations\\n                    </button>\\n                  </p>\\n                  <div class=\\\"collapse\\\" id=\\\"collapseExample\\\">\\n                        <div class=\\\"card card-body\\\">\\n                           <p><strong style=\\\"color:brown\\\">de:</strong>{{countrydetails[0].translations.de}}</p>\\n                           <p><strong style=\\\"color:brown\\\">es:</strong>{{countrydetails[0].translations.es}}</p>\\n                           <p><strong style=\\\"color:brown\\\">fr:</strong>{{countrydetails[0].translations.fr}}</p>\\n                           <p><strong style=\\\"color:brown\\\">ja:</strong>{{countrydetails[0].translations.ja}}</p>\\n                           <p><strong style=\\\"color:brown\\\">it:</strong>{{countrydetails[0].translations.it}}</p>\\n                           <p><strong style=\\\"color:brown\\\">pt:</strong>{{countrydetails[0].translations.pt}}</p>\\n                           <p><strong style=\\\"color:brown\\\">hr:</strong>{{countrydetails[0].translations.hr}}</p>\\n                           <p><strong style=\\\"color:brown\\\">fa:</strong>{{countrydetails[0].translations.fa}}</p>\\n                        </div>\\n                 </div>\\n\\n\\n                </div>\\n\\n           \\n\\n                 \\n\\n    </div>\\n</div>\\n\"","\nimport { Component, OnInit,OnDestroy } from '@angular/core';\n\n//importing route related code\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { ViewdataService } from '../viewdata.service';\nimport {Location} from '@angular/common';\n\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-countryview',\n  templateUrl: './countryview.component.html',\n  styleUrls: ['./countryview.component.css']\n})\nexport class CountryviewComponent implements OnInit {\n  public countryName;\n  public countrydetails;\n  constructor(private _route:ActivatedRoute,private router:Router, public viewdataService : ViewdataService) { \n    console.log(\"Countryview Constructor is called\");\n  }\n\n  ngOnInit() {\n    console.log(\"Countryview ngOnInit called\");\n   this.countryName=this._route.snapshot.paramMap.get('countryname');\n\n    this.viewdataService.getSingleCountryInformation(this.countryName).subscribe (\n      data => {\n          this.countrydetails=data;\n          console.log(this.countrydetails);\n      },\n      error => {\n        console.log(error.errorMessage);\n      }\n    )\n\n}\n}","module.exports = \"h3{\\r\\n    font-size: 1.2em;\\r\\n    color: red;\\r\\n    margin-left: 20%;\\r\\n}\\r\\n.card{\\r\\n\\r\\n    margin-left: 4%;  \\r\\n   \\r\\n    height: 100%;\\r\\n}\\r\\n.card-img-top {\\r\\n    \\r\\n    height: 10vw;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"row\\\" *ngIf='curr_country_details'>\\n    <div class=\\\"col-12 col-md-12 col-sm-12\\\">\\n      <h3>Countries with <strong><i>{{currencycode}}</i></strong> as Currency</h3>\\n    </div>\\n    <div *ngFor=\\\"let country of curr_country_details\\\"  class=\\\"col-md-4 col-sm-4 col-12\\\">\\n      <div class=\\\"card border-danger\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n          <p *ngIf=\\\"country.currencies.length>0\\\" class=\\\"card-text\\\">\\n            <strong>Currency-</strong> \\n              <span *ngFor=\\\"let currency of country.currencies;let first=first;let last=last\\\">\\n                <a *ngIf=\\\"currency.code!=null\\\" [routerLink]=\\\"['/currencyview',currency.code]\\\">{{currency.name}}</a>\\n                   {{last ? '' : ','}}\\n               </span>\\n          </p>\\n          <a [routerLink]=\\\"['/countryview',country.name]\\\"  class=\\\"btn btn-primary\\\">View Details</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit,OnDestroy } from '@angular/core';\n\n//importing route related code\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { ViewdataService } from '../viewdata.service';\nimport {Location} from '@angular/common';\n\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-currencyview',\n  templateUrl: './currencyview.component.html',\n  styleUrls: ['./currencyview.component.css']\n})\nexport class CurrencyviewComponent implements OnInit {\n  public currencycode;\n  public curr_country_details;\n  constructor(private _route:ActivatedRoute,private router:Router, public viewdataService : ViewdataService) { \n    console.log(\"Countryview Constructor is called\");\n  }\n\n  ngOnInit() {\n    console.log(\"CurrencyView ngOnInit called\");\n     this.currencycode=this._route.snapshot.paramMap.get('currencycode');\n     \n     this.viewdataService.getCountriesOnCurrency(this.currencycode).subscribe (\n       data => {\n           this.curr_country_details=data;\n           console.log(this.curr_country_details+\"Currency countryDetails\");\n       },\n       error => {\n         console.log(error.errorMessage);\n       }\n     )\n\n  }\n\n}\n","module.exports = \"\\r\\n.myimage img{\\r\\n    margin-top: 12%;\\r\\n    margin-left: 5%;\\r\\n    width: 23vw;\\r\\n    height: 26vh;\\r\\n}\\r\\np{\\r\\n    margin-left: 10%;\\r\\n    color: #FF0000;\\r\\n}\\r\\n.container{\\r\\n    width: 100%;\\r\\n}\\r\\n\"","module.exports = \"\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\"> \\n      <div class=\\\"myimage col-md-4 col-sm-6 col-6\\\">\\n          <img src=\\\"assets/ASIA.jpg\\\">     \\n          <p><a [routerLink]=\\\"['/view']\\\" [queryParams]=\\\"{ region: 'Asia'}\\\"><strong>ASIA</strong></a></p>\\n      </div>\\n      <div class=\\\"myimage col-md-4 col-sm-6 col-6\\\"> \\n        <img src=\\\"assets/regions.jpg\\\">\\n      </div>\\n      <div class=\\\"myimage col-md-4 col-sm-6 col-6\\\">\\n          <img src=\\\"assets/Africa.jpg\\\">\\n          <p><a [routerLink]=\\\"['/view']\\\" [queryParams]=\\\"{ region: 'Africa'}\\\"><strong>AFRICA</strong></a></p>\\n      </div>\\n      <div class=\\\"myimage col-md-4 col-sm-6 col-6\\\">\\n          <img src=\\\"assets/AUSTRALIA.jpg\\\">\\n        <p><a [routerLink]=\\\"['/view']\\\" [queryParams]=\\\"{ region: 'Oceania'}\\\"><strong>OCEANIA</strong></a></p>\\n      </div>\\n      <div class=\\\"myimage  col-md-4 col-sm-6 col-6\\\">\\n        <img src=\\\"assets/America.jpg\\\">\\n        <p><a [routerLink]=\\\"['/view']\\\" [queryParams]=\\\"{ region: 'Americas'}\\\"><strong>AMERICA'S</strong></a></p>       \\n     </div>\\n     <div class=\\\"myimage col-md-4 col-sm-6 col-6\\\">\\n        <img src=\\\"assets/Europe.png\\\">\\n        <p><a [routerLink]=\\\"['/view']\\\" [queryParams]=\\\"{ region: 'Europe'}\\\"><strong>Europe</strong></a></p>\\n     </div>\\n\\n    </div>\\n  </div>\\n  <br/>\\n  <router-outlet></router-outlet>\\n\\n\"","import { Component, OnInit } from '@angular/core';\n//importing route related code\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {Location} from '@angular/common';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor(private _route:ActivatedRoute,private router:Router) { \n    console.log(\"Home Constructor is called\");\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"h3{\\r\\n   font-size: 1.2em;\\r\\n    color: red;\\r\\n    margin-left: 20%;\\r\\n}\\r\\n.card{\\r\\n\\r\\n    margin-left: 4%;  \\r\\n   \\r\\n    height: 100%;\\r\\n}\\r\\n.card-img-top {\\r\\n  \\r\\n    height: 10vw;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n}\\r\\n.container{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"row\\\" *ngIf='lang_country_details'>\\n    <div class=\\\"col-12 col-md-12 col-sm-12\\\">\\n      <h3>List of Countries with languagecode-<strong>{{languagecode}}</strong></h3>\\n    </div>\\n  \\n    <div *ngFor=\\\"let country of lang_country_details\\\"  class=\\\"col-md-4 col-sm-4 col-12\\\">\\n      <div class=\\\"card border-danger\\\">\\n        <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n        <div class=\\\"card-body\\\">\\n          <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n          <p *ngIf=\\\"country.currencies.length>0\\\" class=\\\"card-text\\\">\\n            <strong>Currency-</strong> \\n              <span *ngFor=\\\"let currency of country.currencies;let first=first;let last=last\\\">\\n                <a *ngIf=\\\"currency.code!=null\\\" [routerLink]=\\\"['/currencyview',currency.code]\\\">{{currency.name}}</a>\\n                   {{last ? '' : ','}}\\n               </span>\\n          </p>\\n          <a [routerLink]=\\\"['/countryview',country.name]\\\"  class=\\\"btn btn-primary\\\">View Details</a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n</div>\"","import { Component, OnInit,OnDestroy } from '@angular/core';\n\n//importing route related code\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { ViewdataService } from '../viewdata.service';\nimport {Location} from '@angular/common';\n\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-languageview',\n  templateUrl: './languageview.component.html',\n  styleUrls: ['./languageview.component.css']\n})\nexport class LanguageviewComponent implements OnInit {\n  public languagecode;\n  public lang_country_details;\n  constructor(private _route:ActivatedRoute,private router:Router, public viewdataService : ViewdataService) { \n    console.log(\"Language Constructor is called\");\n  }\n\n  ngOnInit() {\n    console.log(\"Languageview ngOnInit called\");\n    this.languagecode=this._route.snapshot.paramMap.get('languagecode');\n    console.log(\"Languagecode\"+this.languagecode);\n    this.viewdataService.getCountriesOnLanguage(this.languagecode).subscribe (\n      data => {\n          this.lang_country_details=data;\n          console.log(this.lang_country_details+\"Language countryDetails\");\n      },\n      error => {\n        console.log(error.errorMessage);\n      }\n    )\n  }\n\n}\n","module.exports = \"h3{\\r\\n    margin-left: 2%;\\r\\n    color: red;\\r\\n    margin-left: 30%;\\r\\n}\\r\\n.card{\\r\\n   \\r\\n    height: 93%;\\r\\n    margin-left: 4%;  \\r\\n    margin-top: 2%;\\r\\n}\\r\\n.card-img-top {\\r\\n    \\r\\n    height: 10vw;\\r\\n    -o-object-fit: cover;\\r\\n       object-fit: cover;\\r\\n}\\r\\n.container{\\r\\n    width: 100%;\\r\\n}\"","module.exports = \"<div class=\\\"container\\\">\\n<div class=\\\"row\\\" *ngIf='countriesofRegion'>\\n  <div class=\\\"col-12 col-md-12 col-sm-12\\\">\\n    <h3>{{region}}-List of Countries</h3>\\n  </div>\\n\\n  <div *ngFor=\\\"let country of countriesofRegion\\\"  class=\\\"col-md-4 col-sm-4 col-12\\\">\\n    <div  class=\\\"card border-danger\\\">\\n      <img class=\\\"card-img-top\\\" src=\\\"{{country.flag}}\\\" alt=\\\"Card image cap\\\">\\n      <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">{{country.name}}</h5>\\n        <p *ngIf=\\\"country.currencies.length>0\\\" class=\\\"card-text\\\">\\n          <strong>Currency-</strong> \\n            <span *ngFor=\\\"let currency of country.currencies;let first=first;let last=last\\\">\\n              <a *ngIf=\\\"currency.code!=null\\\" [routerLink]=\\\"['/currencyview',currency.code]\\\">{{currency.name}}</a>\\n                 {{last ? '' : ','}}\\n             </span>\\n        </p>\\n         <a  [routerLink]=\\\"['/countryview',country.name]\\\"  class=\\\"btn btn-primary\\\">View Details</a>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\\n</div>\"","import { Component, OnInit,OnDestroy } from '@angular/core';\n\n//importing route related code\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport { ViewdataService } from '../viewdata.service';\nimport {Location} from '@angular/common';\n\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Component({\n  selector: 'app-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class ViewComponent implements OnInit {\n  public countriesofRegion;\n  public region;\n  constructor(private _route:ActivatedRoute,private router:Router, public viewdataService : ViewdataService) { \n    console.log(\"View Constructor is called\");\n  }\n  ngOnDestroy() {\n    console.log(\"OnDestroy implemented in View\");\n  } \n  ngOnInit() {\n    console.log(\"view ngOnInit called\");\n    this._route.queryParams.subscribe(params => {\n          console.log(params); // {region: \"country\"}\n            this.region = params.region;\n          console.log(this.region); // country\n    });\n     \n    this.viewdataService.getSingleRegionInformation(this.region).subscribe (\n      data => {\n          this.countriesofRegion=data;\n          console.log(this.countriesofRegion);\n      },\n      error => {\n        console.log(error.errorMessage);\n      }\n    )\n\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient,HttpErrorResponse} from '@angular/common/http';\nimport { Observable, forkJoin } from \"rxjs\";\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ViewdataService {\n  public regionData=\"https://restcountries.eu/rest/v2/region/\";\n  public countryData=\"https://restcountries.eu/rest/v2/name/\";\n  public currencyData=\"https://restcountries.eu/rest/v2/currency/\";\n  public languageData=\"https://restcountries.eu/rest/v2/lang/\";\n  public fetchRegion;\n  public fetchCountryDetail;\n  public fetchCountryOnCur;\n  public fetchCountryOnLang;\n  constructor(private _http:HttpClient) { \n    console.log(\"service constructor is called\");\n  }\n  \n  //ExceptionHandler\n  private handleError(err:HttpErrorResponse){\n    console.log(\"Handle error Http calls\");\n    console.log(err.message);\n    return Observable.throw(err.message);\n  }\n  \n   //method to get details of region\n public getSingleRegionInformation(region):any{\n  let fetchRegion=this.regionData+region;\n  console.log(fetchRegion+\"FETCH\");\n  let details=this._http.get(fetchRegion);\n  console.log(details+\"Details\");\n  return details;\n}\n\npublic getSingleCountryInformation(countryName):any{\n  let fetchCountryDetail=this.countryData+countryName+\"?fullText=true\";\n  let countryDetails=this._http.get(fetchCountryDetail);\n  console.log(countryDetails);\n  return countryDetails;\n}\n\npublic getCountriesOnCurrency(currencycode):any{\n  let fetchCountryOnCur=this.currencyData+currencycode;\n  console.log(\"FetchCountry on Currency\"+fetchCountryOnCur);\n  let currencyCountryDetails=this._http.get(fetchCountryOnCur);\n  console.log(currencyCountryDetails);\n  return currencyCountryDetails;\n}\n\npublic getCountriesOnLanguage(languagecode):any{\n  let fetchCountryOnLang=this.languageData+languagecode;\n  console.log(\"FetchCountry on Language\"+fetchCountryOnLang);\n  let languageCountryDetails=this._http.get(fetchCountryOnLang);\n  console.log(languageCountryDetails+\"Language\");\n  return languageCountryDetails;\n}\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}